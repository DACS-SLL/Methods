class Grabacion
instance variables
  id_grab : nat := 0;
  tipo : seq of char := "";
  duracion_min : nat := 0;
  duracion_seg : nat := 0;
  datos : seq of int := [];

inv (duracion_min >= 0 and duracion_seg >= 0 and duracion_seg < 60);

operations
  -- Constructor para Grabacion
  public Grabacion: nat * seq of char * nat * nat * seq of int ==> Grabacion
  Grabacion(id_g, t, dur_min, dur_seg, dts) ==
  (
    id_grab := id_g;
    tipo := t;
    duracion_min := dur_min;
    duracion_seg := dur_seg;
    datos := dts
  )
pre dur_min >= 0 and dur_seg >= 0 and dur_seg < 60;

  -- Calcular la duración en seg
  public DuracionTotal: () ==> nat
  DuracionTotal() ==
    return duracion_min * 60 + duracion_seg;

  -- Verificar si la grabación esta sin datos
  public EstaCorrupta: () ==> bool
  EstaCorrupta() ==
    return len datos = 0;

  -- Obtener una muestra de los datos (primeros 100 bytes)
  public ObtenerMuestra: () ==> seq of int
  ObtenerMuestra() ==
    return if len datos > 100 then datos(1,...,100) else datos;

  -- Calidad de la grabación
  public AnalizarCalidad: () ==> seq of char
  AnalizarCalidad() ==
    exit if EstaCorrupta() then "Corrupta"
    elseif len datos < 1000 then "Baja"
    elseif len datos < 10000 then "Media"
    else "Alta";

  -- Comprimir datos *prototipo*
  public ComprimirDatos: () ==> ()
  ComprimirDatos() ==
    datos := [d | d in seq datos & d <> 0];
end Grabacion
